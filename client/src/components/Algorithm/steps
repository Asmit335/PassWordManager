algorithm steps:

    // Step 1: Iterate through the user's purchases to find the tags of the products they have bought

    //2. **Find Tags of Purchased Products:**


    // Step 3: Iterate through each product's tags and calculate the total point of the product


    // Step 4: Calculate the maximum of all product points

    // Step 5: Sort the products in descending order based on the product point

     // Step 6: Calculate the threshold for the recommended product

    // Update recommended products

//explaination of above algorithm

1. **Iterate through User's Purchases:**

   - We start by looking at what the user has bought in the past. We go through each of their purchases and see which products they have bought.

2. **Find Tags of Purchased Products:**

   - For each product the user has bought, we look at its tags. Tags are like labels or categories that describe what the product is about. For example, if a product is a "running shoe", its tags might include "sports", "running", "footwear", etc.

3. **Assign Points to Tags:**

   - Now, we assign points to each tag based on how often the user has bought products with that tag. If the user has bought multiple products with the same tag, we divide the points equally among those products. This helps us understand which tags are more important to the user.

4. **Calculate Total Points for Each Product:**

   - Next, we go through all the products available in our ecommerce store. For each product, we look at its tags and calculate the total points for that product based on the points assigned to its tags by the user.

5. **Determine Maximum Point:**

   - We find out what the maximum number of points is among all the products. This helps us understand how popular the most popular product is among the user's interests.

6. **Sort Products by Points:**

   - We sort all the products based on their total points in descending order. This means the products with the highest total points come first.

7. **Set Threshold for Recommendations:**

   - We set a threshold for recommending products. This threshold helps us decide which products are recommended and which ones are not. For example, if we set the threshold at 50%, it means that only products with total points greater than or equal to 50% of the maximum points will be recommended.

8. **Recommend Products:**
   - Finally, we recommend products to the user based on whether they meet the threshold we set. If a product's total points are above the threshold, we recommend it to the user.

This algorithm helps us understand the user's interests based on their past purchases and recommends products that match those interests. It's like having a personal shopper who suggests items similar to what you've bought before!
